tdh_deployment:
  name: tdh-tap-singlecluster
  type: tap-cinglecluster
  description: Tanzu Application Platform (TAP) Multicluster Setup
  tkg_version: 2.1.0
  tdh_tools: 2.2.0
tdh_environment: 
  vmc: &VMC
    account: 
      name: '{{ TDH_USER }}'
    tmc: 
      tenant:
        name: '{{ TMC_SERVER_TENNANT }}'
        url: '{{ TMC_SERVER_URL }}'
        name: '{{ TDH_USER }}'
        context: '{{ TMC_CONTEXT_NAME }}'
      account_crdentials: 
        aws: 
          account_name: '{{ TMC_ACCOUNT_NAME_AWS }}'
          ssh_key: '{{ TMC_SSH_KEY_NAME_AWS }}'
      cluster_group: '{{ TDH_CLUSTER_GROUP }}'
      data_protection: 
        arn: '{{ TDH_TANZU_DATA_PROTECTION_ARN }}'
        credential: '{{ TDH_TANZU_DATA_PROTECTION_BACKUP_LOCATION }}'
      observability:
  network: 
    dns:
      prowider: route53
      dns_domain: '{{ AWS_ROUTE53_DNS_DOMAIN }}'
      dns_subdomain: {{ subdomain }}
  s3_storage:
  vsphere:
    network:
      dns_server: '{{ VSPHERE_TKGS_DNS_SERVER }}'
      dns_user: '{{ VSPHERE_TKGS_DNS_USER }}'
    vcenter:
      server: '{{ VSPHERE_TKGS_VCENTER_SERVER }}'
    supervisor_cluster:
      storage_policy: '{{ VSPHERE_TKGS_SUPERVISOR_STORAGE_POLICY }}'
      storage_class: '{{ VSPHERE_TKGS_SUPERVISOR_STORAGE_CLASS }}'
  aws:
    location: '{{ AWS_REGION }}'
    primary_az: '{{ AWS_PRIMARY_AZ }}'
  azure:
    location: '{{ AZURE_LOCATION }}'
  gcp:
    project: '{{ GCP_PROJECT }}'
    region: '{{ GCP_REGION }}'
    config: {% if 1 >= 20 %} sacha {% else %} gugu {% endif %}

tdh_clusters:
  - name: 'tdh-{{ env }}-{{ TDH_USER }}-svc'
    description: 'Tanzu Shared Services'
    config:
      purpose: tap
      role:
        - registry
        - argocd
        - minio
      kubernetes: '1.24'
      tdh_tools: '2.2.0'
      tdh_tools: '2.2.0'
      package_repositories: 
        - name: 'tanzu-standard'
          url:  'extensions.aws-usw2.tmc.cloud.vmware.com/packages/standard/repo'
          namespace: 'tkg-system'
      dns: 
        dns_subdomain: {{ subdomain }}
        tls:
          enabled: true
          ca_issuer: tdh-ca-issuer
          staging_cert: false
          cert_name: tdh-tls-cert
          secret_name: tdh-tls-secret
          hosts:
            - '*.apps'
            - 'harbor'
      tmc:
        enabled: false
        integration: 
          service_mesh: false
          ovservability: false
          data_protection: false
          Inspections:
            - name: CIS
              enabled: false
            - name: Lite
              enabled: false
            - name: Conformance
              enabled: false
      packages:
        - name: 'cert-manager'
          description: 'Certificate Manager'
          package_id: 'cert-manager.tanzu.vmware.com'
          package_manager: 'tanzu'
          package_repo: tkg-system
          namespace: tanzu-system-packages
          version: 'latest'
        - name: 'contour'
          description: 'Contour Ingress Controller'
          package_id: 'contour.tanzu.vmware.com'
          package_manager: 'tanzu'
          package_repo: tkg-system
          namespace: tanzu-system-packages
          version: 'latest'
          ingress_dns: '*.apps'
        - name: 'harbor'
          description: 'Harbor Container Registry'
          package_id: 'harbor.tanzu.vmware.com'
          package_manager: 'tanzu'
          server: 'harbor.apps.{{ subdomain }}.{{ AWS_ROUTE53_DNS_DOMAIN }}'
          version: 'latest'
          package_repo: tkg-system
          namespace: tanzu-system-packages
          admin_password: Password12345
        - name: harbor1
          description: 'Harbor Container Registry'
          package_id: harbor1.tanzu.vmware.com
          package_repo: tkg-system
          namespace: tanzu-system-packages
          package_dependancy:
            - name: 'harbor'
              package_manager: 'helm'
              package_repository: 'https://charts.bitnami.com/bitnami'
              version: 'latest'
    control_plane_nodes:
      node_count: 1
      node_size: 'M'
    worker_nodes:
      node_count: 1
      node_size: 'M'
  - name: 'tdh-{{ env }}-{{ TDH_USER }}-tap'
    description: 'Tanzu Application Platform (Iterate/Build)'
    config:
      purpose: tap
      kubernetes: '1.24'
      tkg: '2.2.0'
      tdh_tools: '2.2.0'
      package_repositories:
        - name: 'tanzu-standard'
          url:  'extensions.aws-usw2.tmc.cloud.vmware.com/packages/standard/repo'
          namespace: 'tkg-system'
      dns:
        dns_subdomain: {{ subdomain }}
        tls:
          enabled: true
          ca_issuer: tdh-ca-issuer
          staging_cert: false
          cert_name: tdh-tls-cert
          secret_name: tdh-tls-secret
          hosts:
            - '*.svc'
            - '*.cnrs'
            - 'learningcenter'
            - 'tap-gui'
            - 'api-portal'
      tmc:
        enabled: false
        integration:
          service_mesh: false
          ovservability: false
          data_protection: false
          Inspections:
            - name: CIS
              enabled: false
            - name: Lite
              enabled: false
            - name: Conformance
              enabled: false
      packages:
        - name: 'cert-manager'
          description: 'Certificate Manager'
          package_id: 'cert-manager.tanzu.vmware.com'
          package_manager: 'tanzu'
          package_repo: tap-install
          namespace: tap-install
          version: 'latest'
        - name: 'contour'
          description: 'Contour Ingress Controller'
          package_id: 'contour.tanzu.vmware.com'
          package_manager: 'tanzu'
          package_repo: tap-install
          namespace: tap-install
          version: 'latest'
          ingress_dns: '*.svc'
      services:
        tap:
          enabled: true
          version: 1.5.1
          role: full
          registry: 
            - name: local_registry
              server: 'harbor.apps.{{ subdomain }}.{{ AWS_ROUTE53_DNS_DOMAIN }}'
              user: 'admin'
              pass: 'Password12345'
    control_plane_nodes:
      node_count: 1
      node_size: 'M'
    worker_nodes:
      node_count: 3
      node_size: 'L'
